#review_conflicts
  .header
    h2= t('.title')
    h3= t('.subtitle_html', :title => @idea.title, :from_user => @from.user.display_name)
  .content
    .text
      = render :partial => "conflict_attribute", :locals => { :name => 'title' }
      = render :partial => "conflict_attribute", :locals => { :name => 'headline' }
      = render :partial => "conflict_attribute", :locals => { :name => 'description' }
      = render :partial => "conflict_attribute", :locals => { :name => 'have' }
      = render :partial => "conflict_attribute", :locals => { :name => 'need' }
    .info
      .tips= t('.info_html', :title => link_to(@idea.title, idea_path(@idea)), :from_user => link_to(@from.user.display_name, idea_path(@from)))
      .tips
        h3= t('.select')
    = form_tag resolve_conflicts_idea_path(@idea), :method => :put do |form|
      = hidden_field_tag 'from_id', @from.id
      = hidden_field_tag 'conflict_attributes'
      .submit
        = submit_tag t('.submit')
= render 'shared/application_js'
= javascript_include_tag 'routers/ideas/review_conflicts'
= javascript_include_tag 'views/ideas/review_conflicts'
javascript:
  app.reviewConflictsView = new ReviewConflictsView({
    selectText: '#{ t('.click_to_select') }',
    deselectText: '#{ t('.click_to_deselect') }',
  })
  app.reviewConflictsRouter = new ReviewConflictsRouter
  Backbone.history.start()
